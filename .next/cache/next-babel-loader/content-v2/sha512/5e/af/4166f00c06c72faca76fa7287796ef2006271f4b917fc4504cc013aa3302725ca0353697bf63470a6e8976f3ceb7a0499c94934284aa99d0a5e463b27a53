{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createAsyncAction, createReducer } from 'typesafe-actions';\nconst initialState = {\n  user: null,\n  loginErrorReason: ''\n};\nexport const LOAD_USER_REQUSET = 'LOAD_USER_REQUSET';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const loginAsync = createAsyncAction(LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE)();\nexport const loadUserAsync = createAsyncAction(LOAD_USER_REQUSET, LOAD_USER_SUCCESS, LOAD_USER_FAILURE)();\nconst actions = {\n  loginAsync,\n  loadUserAsync\n};\nconst userReducer = createReducer(initialState, {\n  [LOGIN_REQUEST]: state => _objectSpread({}, state),\n  [LOGIN_SUCCESS]: (state, {\n    payload: user\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    user: user\n  }),\n  [LOGIN_FAILURE]: (state, {\n    payload: error\n  }) => {\n    var _error$response;\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      user: null,\n      loginErrorReason: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.reason\n    });\n  },\n  [LOAD_USER_REQUSET]: state => _objectSpread({}, state),\n  [LOAD_USER_SUCCESS]: (state, {\n    payload: user\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    user: user\n  }),\n  [LOAD_USER_FAILURE]: (state, {\n    payload: error\n  }) => {\n    var _error$response2;\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loginErrorReason: (_error$response2 = error.response) !== null && _error$response2 !== void 0 && _error$response2.data ? error.response.data : 'Error!',\n      user: null\n    });\n  }\n});\nexport default userReducer;","map":null,"metadata":{},"sourceType":"module"}