{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useCallback } from 'react';\nimport { MainContainer, SearchInput } from '@styles/mainPage';\nimport PostCards from '@containers/main/PostCards';\nimport { LOAD_USER_REQUSET } from '@reducers/user';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport wrapper from '@store/configureStore';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '@hooks/useInput';\nimport { useRouter } from 'next/router';\nimport { LOAD_POSTS_REQUEST } from '@reducers/posts';\nimport DefaultErrorPage from 'next/error';\nimport Head from 'next/head';\n\nconst Search = ({\n  search\n}) => {\n  const {\n    posts,\n    isLoaddingPosts,\n    EndOfPosts,\n    loadPostsErrorReason\n  } = useSelector(state => state.posts);\n  const [keyword, onChangeKeyword] = useInput('');\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const onLoadSearchPosts = useCallback(keyword => {\n    router.push(`/search?search=${keyword}`);\n  }, []);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 10) {\n        if (!(loadPostsErrorReason || isLoaddingPosts || EndOfPosts)) {\n          var _posts;\n\n          const lastId = (_posts = posts[posts.length - 1]) === null || _posts === void 0 ? void 0 : _posts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            payload: {\n              search: search,\n              lastId: lastId\n            }\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uAC80\\uC0C9\"\n      })\n    }), /*#__PURE__*/_jsxs(MainContainer, {\n      children: [/*#__PURE__*/_jsxs(SearchInput, {\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          src: \"/search.svg\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          value: keyword,\n          onChange: onChangeKeyword,\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n              onLoadSearchPosts(keyword);\n            }\n          }\n        })]\n      }), loadPostsErrorReason ? /*#__PURE__*/_jsx(DefaultErrorPage, {\n        statusCode: 503,\n        title: \"\\uC11C\\uBC84\\uAC00 \\uC751\\uB2F5\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [search && /*#__PURE__*/_jsxs(\"p\", {\n          children: [\"\\uCD1D \", /*#__PURE__*/_jsx(\"b\", {\n            children: posts.findPostCount\n          }), \"\\uAC1C\\uC758 \\uAE00\\uC744 \\uCC3E\\uC558\\uC5B4\\uC694!\"]\n        }), /*#__PURE__*/_jsx(PostCards, {\n          posts: posts\n        })]\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_REQUSET\n  });\n  if (context.query.search) context.store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n    payload: {\n      search: context.query.search\n    }\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {\n      search: context.query.search ? context.query.search : ''\n    }\n  };\n});\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}