{"ast":null,"code":"import _regeneratorRuntime from \"/usr/local/Cellar/node/15.1.0/lib/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/usr/local/Cellar/node/15.1.0/lib/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { loadingStart, loadingEnd } from '@reducers/loading';\nimport { LOGIN_REQUEST, loginAsync, LOAD_USER_REQUSET, loadUserAsync } from '@reducers/user';\nimport axios from 'axios';\nimport { call, all, fork, takeLatest, put, takeEvery } from 'redux-saga/effects';\n\nfunction loadUserAPI() {\n  return _loadUserAPI.apply(this, arguments);\n}\n\nfunction _loadUserAPI() {\n  _loadUserAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return axios.get('/user');\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadUserAPI.apply(this, arguments);\n}\n\nfunction loadUser() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadUserAPI);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put(loadUserAsync.success(result.data));\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put(loadUserAsync.failure(_context.t0));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOAD_USER_REQUSET, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction loginAPI(_x) {\n  return _loginAPI.apply(this, arguments);\n}\n\nfunction _loginAPI() {\n  _loginAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(loginData) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return axios.post(\"/user\", loginData);\n\n          case 2:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loginAPI.apply(this, arguments);\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return put(loadingStart(action.type));\n\n        case 2:\n          _context3.prev = 2;\n          _context3.next = 5;\n          return call(loginAPI, action.payload);\n\n        case 5:\n          result = _context3.sent;\n          _context3.next = 8;\n          return put(loginAsync.success(result.data));\n\n        case 8:\n          _context3.next = 15;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](2);\n          console.error(_context3.t0);\n          _context3.next = 15;\n          return put(loginAsync.failure(_context3.t0));\n\n        case 15:\n          _context3.next = 17;\n          return put(loadingEnd(action.type));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 10]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOGIN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchLoadUser)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":null,"metadata":{},"sourceType":"module"}