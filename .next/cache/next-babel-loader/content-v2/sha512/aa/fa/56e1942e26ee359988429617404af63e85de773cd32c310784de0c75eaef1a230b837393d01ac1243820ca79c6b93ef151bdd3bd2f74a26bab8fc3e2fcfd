{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport { MainContainer } from '@styles/mainPage';\nimport HeadCategories from '@containers/main/HeadCategories';\nimport PostCards from '@containers/main/PostCards';\nimport wrapper from '@store/configureStore';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_CATEGORIES_REQUEST, LOAD_POSTS_REQUEST } from '@reducers/posts';\nimport { LOAD_USER_REQUSET } from '@reducers/user';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport Error from './_error';\n\nconst Index = ({\n  category\n}) => {\n  const {\n    posts,\n    Category,\n    isLoaddingPosts,\n    EndOfPosts,\n    numberOfPosts,\n    loadPostsErrorReason\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 10) {\n        if (!(loadPostsErrorReason || isLoaddingPosts || EndOfPosts)) {\n          var _posts;\n\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            payload: {\n              category: category,\n              lastId: (_posts = posts[posts.length - 1]) === null || _posts === void 0 ? void 0 : _posts.id\n            }\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [posts]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: loadPostsErrorReason ? /*#__PURE__*/_jsx(Error, {\n      statusCode: 503,\n      message: \"\\uC11C\\uBC84\\uAC00 \\uC751\\uB2F5\\uD558\\uC9C0 \\uC54A\\uC544\\uC694...\"\n    }) : /*#__PURE__*/_jsxs(MainContainer, {\n      children: [/*#__PURE__*/_jsx(HeadCategories, {\n        category: category,\n        Category: Category,\n        pageRoot: \"\",\n        postNum: numberOfPosts\n      }), /*#__PURE__*/_jsx(PostCards, {\n        posts: posts\n      })]\n    })\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_REQUSET\n  });\n  context.store.dispatch({\n    type: LOAD_CATEGORIES_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n    payload: {\n      category: context.query.category\n    }\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  return {\n    props: {\n      category: context.query.category ? context.query.category : ''\n    }\n  };\n});\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}