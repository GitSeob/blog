{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createAction, createReducer, createAsyncAction } from 'typesafe-actions';\nconst initialState = {\n  post: null,\n  writeSuccess: -1,\n  isEditedPost: false,\n  isRemovedPost: false,\n  loadErrorReason: null,\n  writeErrorReason: null,\n  removeErrorReason: null\n};\nexport const TOGGLE_CONFIRM_POST = 'post/TOGGLE_CONFIRM_POST';\nexport const LOAD_POST_REQUEST = 'post/LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'post/LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'post/LOAD_POST_FAILURE';\nexport const WRITE_POST_REQUEST = 'post/WRITE_POST_REQUEST';\nexport const WRITE_POST_SUCCESS = 'post/WRITE_POST_SUCCESS';\nexport const WRITE_POST_FAILURE = 'post/WRITE_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'post/REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'post/REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'post/REMOVE_POST_FAILURE';\nexport const UPLOAD_IMAGE_REQUEST = 'post/UPLOAD_IMAGE_REQUEST';\nexport const UPLOAD_IMAGE_SUCCESS = 'post/UPLOAD_IMAGE_SUCCESS';\nexport const UPLOAD_IMAGE_FAILURE = 'post/UPLOAD_IMAGE_FAILURE';\nexport const toggleConfirmPost = createAction(TOGGLE_CONFIRM_POST)();\nexport const loadPostAsync = createAsyncAction(LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE)();\nexport const writePostAsync = createAsyncAction(WRITE_POST_REQUEST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE)();\nexport const removePostAsync = createAsyncAction(REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE)();\nexport const uploadImageAsync = createAsyncAction(UPLOAD_IMAGE_REQUEST, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILURE)();\nconst actions = {\n  toggleConfirmPost,\n  loadPostAsync,\n  writePostAsync,\n  uploadImageAsync,\n  removePostAsync\n};\nconst postReducer = createReducer(initialState, {\n  [LOAD_POST_REQUEST]: state => _objectSpread({}, state),\n  [LOAD_POST_SUCCESS]: (state, {\n    payload: post\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    post: post\n  }),\n  [LOAD_POST_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    loadErrorReason: error.response ? error.response.data : 'Error!'\n  }),\n  [WRITE_POST_REQUEST]: state => _objectSpread({}, state),\n  [WRITE_POST_SUCCESS]: (state, {\n    payload: post\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    post: post,\n    isEditedPost: post.isEdited ? true : false,\n    writeSuccess: post.id\n  }),\n  [WRITE_POST_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    writeErrorReason: error.response ? error.response.data : 'Error!'\n  }),\n  [REMOVE_POST_REQUEST]: state => _objectSpread({}, state),\n  [REMOVE_POST_SUCCESS]: state => _objectSpread(_objectSpread({}, state), {}, {\n    isRemovedPost: true\n  }),\n  [REMOVE_POST_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    removeErrorReason: error.response ? error.response.data : 'Error!'\n  })\n});\nexport default postReducer;","map":null,"metadata":{},"sourceType":"module"}