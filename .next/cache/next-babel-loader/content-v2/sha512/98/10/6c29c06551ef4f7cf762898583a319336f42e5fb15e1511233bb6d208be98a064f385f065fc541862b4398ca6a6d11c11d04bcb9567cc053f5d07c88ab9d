{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/usr/local/Cellar/node/15.1.0/lib/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ConfirmPage, SubmitButtonBox } from './style';\nimport marked from 'marked';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CLOSE_CONFIRM_POST } from '@reducers/posting';\nimport { WRITE_POST_REQUEST } from '@reducers/post';\nimport SetThumbnail from '@components/write/SetThumbnail';\n\nvar ConfirmPost = function ConfirmPost(_ref) {\n  var title = _ref.title,\n      post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.posting;\n  }),\n      body = _useSelector.body,\n      isOpen = _useSelector.isOpen,\n      categories = _useSelector.categories,\n      isEditingId = _useSelector.isEditingId;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(post ? post.description : ''),\n      des = _useState[0],\n      setDes = _useState[1];\n\n  var _useState2 = useState(post ? post.is_visible : true),\n      isVisible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(post !== null && post !== void 0 && post.thumbnail ? [post.thumbnail] : []),\n      thumbnails = _useState3[0],\n      setThumbnails = _useState3[1];\n\n  var _useState4 = useState(0),\n      tnIndex = _useState4[0],\n      setTnIndex = _useState4[1];\n\n  var onChangeDes = useCallback(function (e) {\n    e.preventDefault();\n    if (e.target.value.length > 160) return;\n    setDes(e.target.value.replace('\\n', ''));\n  }, []);\n  var removeThumbnail = useCallback(function () {\n    setThumbnails(thumbnails.filter(function (img, i) {\n      return i !== tnIndex;\n    }));\n    setTnIndex(tnIndex > 0 ? tnIndex - 1 : 0);\n  }, [tnIndex, thumbnails]);\n  var addThumbnail = useCallback(function (newImage) {\n    setThumbnails([newImage].concat(_toConsumableArray(thumbnails)));\n    setTnIndex(0);\n  }, [categories]);\n  var onSubmitPost = useCallback(function () {\n    if (!(body && title && des)) {\n      alert('description은 필수 입력 항목입니다.');\n      return;\n    }\n\n    dispatch({\n      type: WRITE_POST_REQUEST,\n      payload: {\n        isEditingId: isEditingId,\n        post: {\n          title: title,\n          description: des,\n          thumbnail: thumbnails[tnIndex],\n          is_visible: isVisible,\n          body: body\n        },\n        category: categories\n      }\n    });\n  }, [body, des, isVisible, thumbnails, tnIndex]);\n  useEffect(function () {\n    var _body$match;\n\n    if (!isOpen || !body) return;\n    var parseDesList = marked(body).match(/<\\s*p[^>]*>([^<]*)<\\s*\\/\\s*p\\s*>/g);\n    var parseDes = parseDesList === null || parseDesList === void 0 ? void 0 : parseDesList.join(' ').replace(/(<([^>]+)>)/gi, '');\n    if (parseDes) setDes(parseDes.length ? parseDes.slice(0, 160) : parseDes);\n    var thumb_imgs = (_body$match = body.match(/!\\[[^\\]]*?\\]\\([^)]+\\)/g)) === null || _body$match === void 0 ? void 0 : _body$match.map(function (imgString) {\n      return imgString.replace(/!\\[[^\\]]*?\\]\\(/g, '').replace(')', '');\n    });\n    setThumbnails(thumb_imgs ? [].concat(_toConsumableArray(thumbnails), _toConsumableArray(thumb_imgs)) : thumbnails);\n  }, [isOpen]);\n  return /*#__PURE__*/_jsx(ConfirmPage, {\n    style: {\n      left: isOpen ? 0 : '100%'\n    },\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"\\uC378\\uB124\\uC77C \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n      }), /*#__PURE__*/_jsx(SetThumbnail, {\n        thumbnails: thumbnails,\n        tnIndex: tnIndex,\n        removeThumbnail: removeThumbnail,\n        setTnIndex: setTnIndex,\n        addThumbnail: addThumbnail\n      }), /*#__PURE__*/_jsxs(\"h3\", {\n        children: [\"Description \\uBBF8\\uB9AC\\uBCF4\\uAE30 \", /*#__PURE__*/_jsxs(\"span\", {\n          children: [des.length, \"/160\"]\n        })]\n      }), /*#__PURE__*/_jsx(\"textarea\", {\n        rows: 4,\n        value: des,\n        onChange: onChangeDes\n      }), /*#__PURE__*/_jsxs(SubmitButtonBox, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          onClick: function onClick() {\n            dispatch({\n              type: CLOSE_CONFIRM_POST\n            });\n          },\n          children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: isVisible ? 'selected' : '',\n          onClick: function onClick() {\n            setVisible(!isVisible);\n          },\n          children: isVisible ? '공개' : '비공개'\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"submit\",\n          onClick: onSubmitPost,\n          children: \"\\uC791\\uC131\\uD558\\uAE30\"\n        })]\n      })]\n    })\n  });\n};\n\nexport default ConfirmPost;","map":null,"metadata":{},"sourceType":"module"}