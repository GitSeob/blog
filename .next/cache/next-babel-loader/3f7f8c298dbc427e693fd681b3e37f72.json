{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadCategories),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadCategories),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadAllPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadAllPosts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(postsSaga);\n\nimport { loadCategoriesAsync, loadPostsAsync } from '@reducers/posts';\nimport axios from 'axios';\nimport { call, all, fork, takeLatest, put, select } from 'redux-saga/effects';\n\nfunction loadCategoriesAPI(_x) {\n  return _loadCategoriesAPI.apply(this, arguments);\n}\n\nfunction _loadCategoriesAPI() {\n  _loadCategoriesAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(postData) {\n    return _regeneratorRuntime.wrap(function _callee$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return axios.get(\"/category\", postData);\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadCategoriesAPI.apply(this, arguments);\n}\n\nfunction loadCategories(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadCategories$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadCategoriesAPI, action.payload);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put(loadCategoriesAsync.success(result));\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put(loadCategoriesAsync.failure(_context.t0));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchloadCategories() {\n  return _regeneratorRuntime.wrap(function watchloadCategories$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(loadCategoriesAsync.request, loadCategories);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction loadAllPostsAPI(_x2) {\n  return _loadAllPostsAPI.apply(this, arguments);\n}\n\nfunction _loadAllPostsAPI() {\n  _loadAllPostsAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!query.search) {\n              _context7.next = 4;\n              break;\n            }\n\n            _context7.next = 3;\n            return axios.get(\"/post/search?lastId=\".concat(query.lastId || 0, \"&search=\").concat(encodeURIComponent(query.search)));\n\n          case 3:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 4:\n            _context7.next = 6;\n            return axios.get(\"/post?lastId=\".concat(query.lastId || 0, \"&category=\").concat(query.category ? encodeURIComponent(query.category) : '0'));\n\n          case 6:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 7:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadAllPostsAPI.apply(this, arguments);\n}\n\nfunction loadAllPosts(action) {\n  var _yield$select, user, result;\n\n  return _regeneratorRuntime.wrap(function loadAllPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return select();\n\n        case 3:\n          _yield$select = _context3.sent;\n          user = _yield$select.user;\n          if (action.payload) action.payload['user'] = user;\n          _context3.next = 8;\n          return call(loadAllPostsAPI, action.payload);\n\n        case 8:\n          result = _context3.sent;\n          _context3.next = 11;\n          return put(loadPostsAsync.success(result));\n\n        case 11:\n          _context3.next = 18;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 18;\n          return put(loadPostsAsync.failure(_context3.t0));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction watchLoadAllPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadAllPosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(loadPostsAsync.request, loadAllPosts);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function postsSaga() {\n  return _regeneratorRuntime.wrap(function postsSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchloadCategories), fork(watchLoadAllPosts)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":null,"metadata":{},"sourceType":"module"}