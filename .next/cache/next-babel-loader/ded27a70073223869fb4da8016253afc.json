{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { MainContainer, SearchInput } from '@styles/mainPage';\nimport PostCards from '@containers/main/PostCards';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '@hooks/useInput';\nimport { useRouter } from 'next/router';\nimport { LOAD_POSTS_REQUEST } from '@reducers/posts';\nimport DefaultErrorPage from 'next/error';\nimport Head from 'next/head';\n\nvar Search = function Search(_ref) {\n  var search = _ref.search;\n\n  var _useSelector = useSelector(function (state) {\n    return state.posts;\n  }),\n      posts = _useSelector.posts,\n      isLoaddingPosts = _useSelector.isLoaddingPosts,\n      EndOfPosts = _useSelector.EndOfPosts,\n      loadPostsErrorReason = _useSelector.loadPostsErrorReason;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      keyword = _useInput2[0],\n      onChangeKeyword = _useInput2[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var onLoadSearchPosts = useCallback(function (keyword) {\n    router.push(\"/search?search=\".concat(keyword));\n  }, []);\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 10) {\n        if (!(loadPostsErrorReason || isLoaddingPosts || EndOfPosts)) {\n          var _posts;\n\n          var lastId = (_posts = posts[posts.length - 1]) === null || _posts === void 0 ? void 0 : _posts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            payload: {\n              search: search,\n              lastId: lastId\n            }\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uAC80\\uC0C9\")), __jsx(MainContainer, null, __jsx(SearchInput, null, __jsx(\"img\", {\n    src: \"/search.svg\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    value: keyword,\n    onChange: onChangeKeyword,\n    onKeyPress: function onKeyPress(e) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        onLoadSearchPosts(keyword);\n      }\n    }\n  })), loadPostsErrorReason ? __jsx(DefaultErrorPage, {\n    statusCode: 503,\n    title: \"\\uC11C\\uBC84\\uAC00 \\uC751\\uB2F5\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n  }) : __jsx(React.Fragment, null, search && __jsx(\"p\", null, \"\\uCD1D \", __jsx(\"b\", null, posts.findPostCount), \"\\uAC1C\\uC758 \\uAE00\\uC744 \\uCC3E\\uC558\\uC5B4\\uC694!\"), __jsx(PostCards, {\n    posts: posts\n  }))));\n};\n\nexport var __N_SSP = true;\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}