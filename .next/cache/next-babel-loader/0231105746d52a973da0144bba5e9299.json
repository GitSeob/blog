{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tpadding: 40px 20px;\\n\\n\\t& > p {\\n\\t\\tmargin: 1rem 0 1rem 0;\\n\\t}\\n\\t& > img {\\n\\t\\tmargin-top: 2rem;\\n\\t\\twidth: 100%;\\n\\t}\\n\\n\\t& > div.bodyContainer {\\n\\t\\tbackground: #fff;\\n\\t\\tbox-shadow: 0 0.06875rem 0.1875rem rgba(90, 97, 105, 0.1), 0 0.0375rem 0.40625rem rgba(90, 97, 105, 0.1);\\n\\t}\\n\\n\\t& > #disqus_thread {\\n\\t\\tmargin-top: 2rem;\\n\\t\\tpadding: 1rem;\\n\\t\\tbackground: #fff;\\n\\t\\tbox-shadow: 0 0.06875rem 0.1875rem rgba(90, 97, 105, 0.1), 0 0.0375rem 0.40625rem rgba(90, 97, 105, 0.1);\\n\\t}\\n\\n\\t#help-notice {\\n\\t\\tdisplay: none;\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { DateP } from '@styles/default';\nimport Categories from '@containers/share/Categories';\nimport PostBody from '@components/write/PostBody';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/dist/client/router';\nimport Head from 'next/head';\nimport DefaultErrorPage from 'next/error';\nimport PostTitle from '@components/post/PostTitle';\nimport LoadingFilter from '@components/layout/LoadingFilter';\nimport dynamic from 'next/dynamic';\nimport styled from 'styled-components';\nimport { DefaultBox } from '@styles/default';\nvar Disqus = dynamic(function () {\n  return import('@components/post/Disqus');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('@components/post/Disqus')];\n    },\n    modules: ['@components/post/Disqus']\n  }\n});\n\nvar PostPage = function PostPage() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      post = _useSelector.post,\n      isRemovedPost = _useSelector.isRemovedPost;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      user = _useSelector2.user;\n\n  var loading = useSelector(function (state) {\n    return state.loading;\n  });\n  var router = useRouter();\n  useEffect(function () {\n    if (isRemovedPost) {\n      alert('포스트가 삭제되었습니다.');\n      router.push('/');\n    }\n  }, [isRemovedPost]);\n  return __jsx(React.Fragment, null, loading.REMOVE_POST_REQUEST && __jsx(LoadingFilter, null), post ? __jsx(Container, null, __jsx(Head, null, __jsx(\"title\", null, post.title), __jsx(\"meta\", {\n    name: \"description\",\n    content: post.description\n  })), __jsx(PostTitle, {\n    title: post.title,\n    id: post.id,\n    isUser: user && true\n  }), __jsx(DateP, null, dayjs(post.createdAt).format('YYYY년 MM월 DD일')), __jsx(Categories, {\n    categories: post.categoryPosts,\n    aflg: false\n  }), post.thumbnail && post.body.indexOf(post.thumbnail) === -1 && __jsx(\"img\", {\n    src: post.thumbnail\n  }), __jsx(\"div\", {\n    className: \"bodyContainer\"\n  }, __jsx(PostBody, {\n    setTitle: false,\n    body: post.body\n  })), __jsx(Disqus, {\n    id: post.id\n  })) : __jsx(DefaultErrorPage, {\n    statusCode: 404,\n    title: \"\\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uAC70\\uB098 \\uC0AD\\uC81C\\uB41C \\uD3EC\\uC2A4\\uD2B8\\uC785\\uB2C8\\uB2E4.\"\n  }));\n};\n\nexport var __N_SSP = true;\nexport default PostPage;\nvar Container = styled(DefaultBox)(_templateObject());","map":null,"metadata":{},"sourceType":"module"}